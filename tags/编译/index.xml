<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>编译 on 天远博客</title>
        <link>https://www.ypr.cc/tags/%E7%BC%96%E8%AF%91/</link>
        <description>Recent content in 编译 on 天远博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>YuanPeirong TianYuan All Rights Reserved.</copyright>
        <lastBuildDate>Sun, 07 Jan 2024 13:00:21 +0800</lastBuildDate><atom:link href="https://www.ypr.cc/tags/%E7%BC%96%E8%AF%91/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>boost库编译</title>
        <link>https://www.ypr.cc/p/prog/cpp-boost-compile/</link>
        <pubDate>Sun, 07 Jan 2024 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-boost-compile/</guid>
        <description>&lt;h2 id=&#34;编译-gcc1320-x64-2023-12-29&#34;&gt;编译-GCC13.2.0-x64-2023-12-29&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;编译器版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MinGW-w64版本：x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev1.7z&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gcc version 13.2.0 (x86_64-posix-seh-rev1, Built by MinGW-Builds project)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gcc.exe (x86_64-posix-seh-rev1, Built by MinGW-Builds project) 13.2.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D:\MinGW-w64-ucrt\bin\g++.exe&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成&amp;quot;D:\Code\boost_1_84_0\b2.exe&amp;quot;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; D:\Code\boost_1_84_0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bootstrap gcc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b2 -j16 --build-dir=.\TYbuild --build-type=complete --prefix=.\gcc1320_x64 link=static,shared threading=single,multi runtime-link=static,shared address-model=64 toolset=gcc variant=debug,release install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备注&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-jN：同时使用N个子线程编译，根据机器需要选取不同的线程数目&lt;/li&gt;
&lt;li&gt;&amp;ndash;build-dir：编译生成的中间文件的路径。默认为X:\boost_X_XX_X\boost\bin.v2，等编译完成后删除&lt;/li&gt;
&lt;li&gt;&amp;ndash;build-type=&lt;type&gt; 编译类型，可选minimal（最小）、complete（完整），默认minimal。&lt;/li&gt;
&lt;li&gt;&amp;ndash;with-&lt;library&gt;    加入此参数，代表只编译的库。&lt;/li&gt;
&lt;li&gt;&amp;ndash;without-&lt;library&gt; 加入此参数，代表忽略编译的库。&lt;/li&gt;
&lt;li&gt;&amp;ndash;without/&amp;ndash;with：选择不编译/编译哪些库。因为python、mpi等库我都用不着，所以排除之。还有wave、graph、math、regex、test、program_options、serialization、signals这几个库编出的静态lib都非常大，所以不需要的也可以without。这可以根据各人需要进行选择，默认是全部编译。但是需要注意，如果选择编译python的话，是需要python语言支持的，可以到python官方主页下载安装。查看boost包含库的命令是bjam &amp;ndash;show-libraries。&lt;/li&gt;
&lt;li&gt;&amp;ndash;layout=versioned&lt;/li&gt;
&lt;li&gt;link：生成动态链接库/静态链接库。生成动态链接库需使用shared方式，生成静态链接库需使用static方式。一般boost库可能都是以static方式编译，因为最终发布程序带着boost的dll感觉会比较累赘。&lt;/li&gt;
&lt;li&gt;threading：单/多线程编译。一般都写多线程程序，当然要指定multi方式了；如果需要编写单线程程序，那么还需要编译单线程库，可以使用single方式。&lt;/li&gt;
&lt;li&gt;stage/install：stage表示只生成库（dll和lib），install还会生成包含头文件的include目录。推荐使用stage，因为install生成的这个include目录实际就是boost安装包解压缩后的boost目录（X:\boost_X_XX_X\boost，只比include目录多几个非hpp文件，都很小），所以可以直接使用，而且不同的IDE都可以使用同一套头文件，这样既节省编译时间，也节省硬盘空间。&lt;/li&gt;
&lt;li&gt;runtime-link：动态/静态链接C/C++运行时库。同样有shared和static两种方式，这样runtime-link和link一共可以产生4种组合方式，各人可以根据自己的需要选择编译。&lt;/li&gt;
&lt;li&gt;toolset：指定编译器，可选的如borland、gcc、msvc（VC6）、msvc-10.0（VS2010）、msvc-12.0（VS2013）、msvc-14.0（VS2015）等。&lt;/li&gt;
&lt;li&gt;stagedir/&amp;ndash;prefix：stage时使用stagedir，install时使用prefix，表示编译生成文件的路径。推荐给不同的IDE指定不同的目录，如VS2015对应的是
X:\boost_X_XX_X\vc10,如果使用了install参数，那么还将生成头文件目录，vc10对应的就是X:\boost_X_XX_X\boost\bin\vc10\include\boost_X_XX_X\boost&lt;/li&gt;
&lt;li&gt;variant：编译debug/release版本。一般都是程序的debug版本对应库的debug版本，所以两个都编译。那么如果需要生成dll，可以使用link=shared方式生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;编译-gcc1320-x64-2023-12-29-1&#34;&gt;编译-GCC13.2.0-x64-2023-12-29&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;编译器版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MinGW-w64版本：x86_64-13.2.0-release-win32-seh-ucrt-rt_v11-rev1.7z&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成&amp;quot;D:\Code\boost_1_83_0\b2.exe&amp;quot;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;cd&lt;/span&gt; D:\Code\boost_1_83_0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bootstrap gcc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b2 -j16 --build-dir=.\tmp --build-type=complete threading=multi link=shared address-model=64 toolset=gcc stage
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备注&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“stage”表示生成的Boost库文件会存储于“D:\Code\boost_1_83_0\stage\lib”文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;库命名规则&#34;&gt;库命名规则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.a                  静态链接库link=static&lt;/p&gt;
&lt;p&gt;.dll、.dll.a    动态链接库link=shared&lt;/p&gt;
&lt;p&gt;在大多数unix平台上：.so是共享库。.a是静态库
在 Windows上：.dll表示共享库，.lib是静态或导入库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;s       静态链接C/C++运行时库runtime-link=static&lt;/p&gt;
&lt;p&gt;无s   动态链接C/C++运行时库runtime-link=shared&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无d   variant=release版本&lt;/p&gt;
&lt;p&gt;d       variant=debug版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mt     多线程threading=multi&lt;/p&gt;
&lt;p&gt;无mt 单线程threading=single&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;g：使用标准库和运行时支撑库的调试版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;y：使用 Python的特殊调试构建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;p：使用 STLPort标准库而不是编译器提供的默认库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n：使用 STLPort已被弃用的&amp;quot;native iostreams&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Kawaii-gcc 让GCC变得可爱</title>
        <link>https://www.ypr.cc/p/prog/cpp-kawaii-gcc/</link>
        <pubDate>Sun, 07 Jan 2024 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-kawaii-gcc/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;转自：&lt;a class=&#34;link&#34; href=&#34;https://github.com/Bill-Haku/kawaii-gcc/blob/main/README-zh.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Bill-Haku/kawaii-gcc/blob/main/README-zh.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Bill-Haku/kawaii-gcc&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub Repo stars&#34;
	
	
&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/Bill-Haku/kawaii-gcc&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub contributors&#34;
	
	
&gt; &lt;img src=&#34;https://img.shields.io/github/license/Bill-Haku/kawaii-gcc&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub License&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;让你的GCC编译器变得可爱！&lt;/p&gt;
&lt;p&gt;本项目通过修改GCC的输出信息的本地化文件的方式让GCC变得可爱。&lt;/p&gt;
&lt;p&gt;欢迎贡献更多有趣的内容。&lt;/p&gt;
&lt;h2 id=&#34;依赖&#34;&gt;依赖&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GNU GCC&lt;/li&gt;
&lt;li&gt;GNU Gettext&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何使用&#34;&gt;如何使用？&lt;/h2&gt;
&lt;h3 id=&#34;linux-以ubuntu为例&#34;&gt;Linux (以Ubuntu为例)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1gC4y1P7t3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中文版使用教程视频-Bilibili&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1Wg4y1X74a/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;日语版使用教程视频-Bilibili&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/ASWBU8HhvY0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;日语版使用教程视频-YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装中文 (如果没有安装)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install language-pack-zh-hans language-pack-zh-hans-base
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;gcc&lt;/code&gt; ,  &lt;code&gt;gettext&lt;/code&gt; 和 &lt;code&gt;g++&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install gcc gettext g++
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;gcc locales&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过以下命令检查你的&lt;code&gt;gcc&lt;/code&gt;版本号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我这里是12.3.0.所以我的主版本号是12，安装&lt;code&gt;gcc-12-locales&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install gcc-12-locales
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到你的语言文件的路径。默认会在 &lt;code&gt;/usr/share/locale/zh_CN/LC_MESSAGES/gcc.mo&lt;/code&gt;. 不过你也有可能找不到该文件或者找到名为&lt;code&gt;gcc-12.mo&lt;/code&gt;的文件。如果已有相关文件，备份之。 (eg. &lt;code&gt;sudo mv gcc-12.mo gcc-12.mo.bak&lt;/code&gt;) 如果没有相关文件，无需担心，什么都不需要做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过以下命令下载仓库中的&lt;code&gt;mo&lt;/code&gt; 文件然后将其复制到刚才的路径去。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; sudo wget https://github.com/Bill-Haku/kawaii-gcc/raw/main/prebuilt/gcc-zh.mo -O /usr/share/locale/zh_CN/LC_MESSAGES/gcc-12.mo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您也可以自行重新编译该二进制文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make merge-zh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;msgfmt gcc-zh.po -o gcc.mo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cp gcc.mo /usr/share/locale/zh_CN/LC_MESSAGES/gcc-12.mo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关于文件名：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你在上个步骤找到了相关文件，请直接使用原本的名字。&lt;/li&gt;
&lt;li&gt;如果没有，首先使用 &lt;code&gt;gcc-&amp;lt;主版本号&amp;gt;.mo&lt;/code&gt; 。如果发现不起作用，将其重命名为 &lt;code&gt;gcc.mo&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改环境变量以将终端语言改为中文：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Add the following lines&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;zh_CN.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Save it in Vim&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现在你的GCC已经变得可爱了。&lt;/p&gt;
&lt;p&gt;你可以使用附带的 &lt;code&gt;test.cc&lt;/code&gt; 来试试效果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc test.cc -Wall
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# -Wall 表示让GCC输出所有警告信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;a class=&#34;link&#34; href=&#34;https://www.cygwin.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cygwin&lt;/a&gt;。&lt;br&gt;
步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载并运行 &lt;a class=&#34;link&#34; href=&#34;https://www.cygwin.com/setup-x86_64.exe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;setup-x86_64.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;选择下载源&lt;/code&gt; (&lt;code&gt;Choose A Download Source&lt;/code&gt;) 步骤时选择 &lt;code&gt;从互联网安装&lt;/code&gt; (&lt;code&gt;Install from Internet&lt;/code&gt;)&lt;br&gt;
&lt;img src=&#34;https://www.ypr.cc/img/install_from_internet.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;install_from_internet.png&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;选择软件包&lt;/code&gt; (&lt;code&gt;Select Packages&lt;/code&gt;) 步骤时, 将&lt;code&gt;查看&lt;/code&gt; (&lt;code&gt;View&lt;/code&gt;) 设为 &lt;code&gt;类别&lt;/code&gt; (&lt;code&gt;Category&lt;/code&gt;) 并依次搜索 (Search) 并选择 ALL/Devel 下的 &lt;code&gt;gcc-core&lt;/code&gt;，&lt;code&gt;gcc-g++&lt;/code&gt; 和 &lt;code&gt;gettext&lt;/code&gt; 的版本
&lt;img src=&#34;https://www.ypr.cc/img/select_packages.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;select_packages.png&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假设你的 Cygwin 安装目录 (注意不是软件包下载目录) 为 &lt;code&gt;&amp;lt;DIR&amp;gt;&lt;/code&gt; (默认应该是 &lt;code&gt;C:\cygwin&lt;/code&gt;), 将目录 &lt;code&gt;&amp;lt;DIR&amp;gt;\bin&lt;/code&gt; 目录添加到环境变量 &lt;code&gt;Path&lt;/code&gt; 中 (如果 &lt;code&gt;Path&lt;/code&gt; 中已经有 mingw 了, 请删除或者移到&lt;code&gt;&amp;lt;DIR&amp;gt;\bin&lt;/code&gt;的下方), 并额外增加一条环境变量 &lt;code&gt;LANG&lt;/code&gt;, 设置为 &lt;code&gt;zh_CN.UTF-8&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将本仓库的 &lt;code&gt;prebuilt&lt;/code&gt; 目录下的 &lt;code&gt;gcc-zh.mo&lt;/code&gt; 放到 &lt;code&gt;&amp;lt;DIR&amp;gt;\usr\share\locale\zh_CN\LC_MESSAGES&lt;/code&gt; 目录下, 并将其重命名为 &lt;code&gt;gcc.mo&lt;/code&gt; (建议先将原来的gcc.mo备份)&lt;br&gt;
&lt;img src=&#34;https://www.ypr.cc/img/change_gcc_mo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;change_gcc_mo.png&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;macos&#34;&gt;macOS&lt;/h3&gt;
&lt;p&gt;暂未实现。欢迎贡献。&lt;/p&gt;
&lt;h2 id=&#34;如何修改贡献&#34;&gt;如何修改/贡献&lt;/h2&gt;
&lt;p&gt;前往&lt;code&gt;./src&lt;/code&gt;目录，使用文本编辑器打开并编辑&lt;code&gt;zh-kawaii.po&lt;/code&gt;。可以修改已有的内容，也可以根据原始简体中文本地化文件增加新内容。编辑完成后运行&lt;code&gt;make&lt;/code&gt;指令合并文件，并将其编译成&lt;code&gt;mo&lt;/code&gt;文件后拷贝到指定的地方。&lt;/p&gt;
&lt;h4 id=&#34;关于src目录下的文件&#34;&gt;关于&lt;code&gt;src&lt;/code&gt;目录下的文件&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zh_CN.po&lt;/code&gt;: GNU提供的原始简体中文版本地化文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zh_kawaii.po&lt;/code&gt;: 本项目已修改的本地化内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;如果您愿意参与贡献本项目&#34;&gt;如果您愿意参与贡献本项目&lt;/h4&gt;
&lt;p&gt;请在PR时将您修改完成的编译好的&lt;code&gt;mo&lt;/code&gt;文件放在&lt;code&gt;../prebuilt&lt;/code&gt;目录下，以更新预编译好的本地化二进制文件。&lt;/p&gt;
&lt;h2 id=&#34;star-history&#34;&gt;Star History&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Bill-Haku/kawaii-gcc&amp;amp;type=Date&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Star History Chart&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;特别鸣谢&#34;&gt;特别鸣谢&lt;/h2&gt;
&lt;p&gt;本项目的灵感来自&lt;a class=&#34;link&#34; href=&#34;https://github.com/Mosklia/gcc-hentai&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;gcc-hentai&lt;/code&gt;&lt;/a&gt;项目。为了将其推广到日语区，我创建了本仓库、制作了日语版并修改完善了使用说明的诸多细节，最后制作了完全日语的宣传视频发布在YouTube，不料却在Bilibili获得了关注。十分感谢原作者的分享和开源精神。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Qt5编译(MinGW-w64)</title>
        <link>https://www.ypr.cc/p/prog/cpp-qt5compile-mingw-w64/</link>
        <pubDate>Fri, 24 Nov 2023 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-qt5compile-mingw-w64/</guid>
        <description>&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc-snapshots.qt.io/qt5-5.15/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc-snapshots.qt.io/qt5-5.15/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/supported-platforms.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/supported-platforms.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows-requirements.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows-requirements.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/configure-options.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/configure-options.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.qt.io/Building_Qt_5_from_Git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.qt.io/Building_Qt_5_from_Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.qt.io/MinGW-64-bit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.qt.io/MinGW-64-bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zxjohnson/article/details/106621457&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/zxjohnson/article/details/106621457&lt;/a&gt; (Qt 5.15.0编译指南)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/MrTsai_cpp/article/details/115175669&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/MrTsai_cpp/article/details/115175669&lt;/a&gt; (Qt 5.15的源码编译(Windows))&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/arxive/p/14412614.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/arxive/p/14412614.html&lt;/a&gt; (QT 5.15 及以后QT版本源码编译（静态库、动态库）)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kucoding.com/article/149&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.kucoding.com/article/149&lt;/a&gt; (Qt6.5.3静态编译与使用-酷编程)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_50964512/article/details/124746458&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_50964512/article/details/124746458&lt;/a&gt; (Qt 静态编译与使用（6.2 详解版）)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Comewood/article/details/125697120&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/Comewood/article/details/125697120&lt;/a&gt; （Windows10 Qt 遇到EGL/egl.h: No such file or directory 解决方法）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载源码包&#34;&gt;下载源码包&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.qt.io/archive/qt/5.15/5.15.11/single/qt-everywhere-opensource-src-5.15.11.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.qt.io/archive/qt/5.15/5.15.11/single/qt-everywhere-opensource-src-5.15.11.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装build工具并配置相关环境变量&#34;&gt;安装build工具并配置相关环境变量&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;D:\Qt\Tools\mingw810_64\bin&lt;/li&gt;
&lt;li&gt;These tools are not needed to run Qt 5 applications, but they are required for building Qt 5 from source.
&lt;ul&gt;
&lt;li&gt;Perl - Install a recent version of perl (for instance (&lt;a class=&#34;link&#34; href=&#34;https://strawberryperl.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://strawberryperl.com/&lt;/a&gt;) and add the installation location to your PATH.&lt;/li&gt;
&lt;li&gt;Python - Install Python from the here and add the installation location to your PATH.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;验证build工具是否正确安装&#34;&gt;验证build工具是否正确安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;打开cmd(不要关闭)&lt;/li&gt;
&lt;li&gt;输入
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;D:&lt;span class=&#34;se&#34;&gt;\Q&lt;/span&gt;t&lt;span class=&#34;se&#34;&gt;\T&lt;/span&gt;ools&lt;span class=&#34;se&#34;&gt;\m&lt;/span&gt;ingw810_64&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%PATH%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; gcc -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; g++ -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; perl -V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; python -V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;设定文件夹&#34;&gt;设定文件夹&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;F:\Qt\5.15.11\src                                  源码目录qt-everywhere-opensource-src-5.15.11.zip解压，并改名为src，放置于F:\Qt\5.5.11\src&lt;/li&gt;
&lt;li&gt;F:\Qt\5.15.11\build-mingw810_64    build目录&lt;/li&gt;
&lt;li&gt;F:\Qt\5.15.11-static\mingw810_64    最后安装目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译&#34;&gt;编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立F:\Qt\qt5mingw810_64.cmd文件，需设置好Qt源代码路径、mingw810_64路径(D:\Qt\Tools\mingw810_64\bin)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立cmd链接cmd-qt5mingw810_64，并运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比较后，本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;替代下文手动将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-mingw810_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\5.15.11\build-mingw810_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\5.15.11-static\mingw810_64&amp;#34;&lt;/span&gt; -debug-and-release -nomake examples -nomake tests -skip qtwebengine -opensource -opengl desktop -platform win32-g++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mingw32-make -j16   &lt;span class=&#34;c1&#34;&gt;#开启十六线程编译，根据自己电脑实际核心数调整&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mingw32-make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译此段内容为历史记录作废&#34;&gt;&lt;del&gt;编译(此段内容为历史记录，作废)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在cmd中(上述不要关闭，否则要重新set PATH=D:\Qt\Tools\mingw810_64\bin;%PATH%)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本步骤在2023-11-23编译时未使用，查看官网文档可将上一步替换优化如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立F:\Qt\qt5mingw810_64.cmd文件，需设置好Qt源代码路径、mingw810_64路径&lt;/li&gt;
&lt;li&gt;建立cmd链接cmd-qt5mingw810_64，并运行&lt;/li&gt;
&lt;li&gt;比较后，本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;替代下文手动将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-mingw810_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\5.15.11\build-mingw810_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#当使用上述qt5vars.cmd文件时，可省略此三行命令，因为已经在qt5vars.cmd文件中执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;F:&lt;span class=&#34;se&#34;&gt;\Q&lt;/span&gt;t&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;%_ROOT%&lt;span class=&#34;se&#34;&gt;\q&lt;/span&gt;tbase&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%_ROOT%&lt;span class=&#34;se&#34;&gt;\g&lt;/span&gt;nuwin32&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%PATH%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\5.15.11-static\mingw810_64&amp;#34;&lt;/span&gt; -debug-and-release -nomake examples -nomake tests -skip qtwebengine -opensource -opengl desktop -platform win32-g++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mingw32-make   &lt;span class=&#34;c1&#34;&gt;#2023-11-23实测很慢，可改为&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;c1&#34;&gt;#mingw32-make -j16    #开启十六线程编译，根据自己电脑实际核心数调整&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mingw32-make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明1&#34;&gt;说明1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;-static就是静态编译的意思，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-debug-and-release，则表示将调试版、发行版都进行编译。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-prefix 指定安装将会部署的位置，根据自己情况修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-nomake examples 不需要编译示例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-nomake tests 不需要编译测试工程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-skip qtwebengine 暂时先不编译webengine模块，因为太大了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-opensource 开源版本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-confirm-license 是为了自动确认开源证书，免得到时暂停手动确认&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-qt-zlib -ssl -icu 指示检测这些库，并在需要时使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-opengl desktop 明确指示使用你windows上安装的opengl驱动来编译程序，但这样编译出的程序在别的电脑上运行时需要目标电脑上安装的opengl驱动能兼容你的程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-platform win32-g++ 指明编译平台是windows，并使用mingw编译器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For Windows machines, either MinGW or Visual Studio toolchains can be used to compile Qt.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;configure.bat -platform win32-g++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;configure.bat -platform win32-msvc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-opengl desktop 切换到desktop版本的opengl，解决错误提示error：EGL/egl.h: No such file or directory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明2&#34;&gt;说明2&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;等待配置完成后(其间要输入y同意协议)，再运行命令&lt;del&gt;mingw32-make&lt;/del&gt; mingw32-make -j16开始构建：&lt;/li&gt;
&lt;li&gt;然后就是慢慢等编译了，这个过程比较漫长，如果电脑配置较低，估计需要几个小时：&lt;/li&gt;
&lt;li&gt;编译完成后，继续运行命令mingw32-make install即可将编译好的静态库安装到前面我们所指定的目录中去：&lt;/li&gt;
&lt;li&gt;此时你就可以删除前面的build文件夹，释放110多G的空间，它已经没用了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-23编译已删除&#34;&gt;&lt;del&gt;2023-11-23编译(已删除)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;环境：YPR-Desktop、Windows 11 pro 23H2、D:\Qt\Tools\mingw810_64\bin、需数小时更多、7.65GB&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;build文件约16.9GB，已删除&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;del&gt;未编译doc&lt;/del&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-24编译&#34;&gt;2023-11-24编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Desktop、Windows 11 pro 23H2、D:\Qt\Tools\mingw810_64\bin、约44分钟、7.65GB&lt;/li&gt;
&lt;li&gt;采用了qt5mingw810_64.cmd、采用了mingw32-make -j16&lt;/li&gt;
&lt;li&gt;build文件约16.9GB，已删除&lt;/li&gt;
&lt;li&gt;未编译doc&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-28编译仅-release-ypr-desktop&#34;&gt;2023-11-28编译(仅-release YPR-Desktop)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Desktop、Windows 11 pro 23H2、D:\Qt\Tools\mingw810_64\bin、约15分钟、932MB&lt;/li&gt;
&lt;li&gt;采用了qt5mingw810_64.cmd、采用了mingw32-make -j16&lt;/li&gt;
&lt;li&gt;build文件约2.52GB，已删除&lt;/li&gt;
&lt;li&gt;未编译doc&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-28编译仅-release-ypr-server&#34;&gt;2023-11-28编译(仅-release YPR-Server)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Server、Windows 10 pro 22H2、D:\Qt\Tools\mingw810_64\bin、约1.5小时、932MB&lt;/li&gt;
&lt;li&gt;采用了qt5mingw810_64.cmd、采用了mingw32-make -j24&lt;/li&gt;
&lt;li&gt;build文件约2.52GB，已删除&lt;/li&gt;
&lt;li&gt;未编译doc&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;备注&#34;&gt;备注&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;qt-everywhere-opensource-src-5.15.11.zip用D:\Qt\Tools\mingw1120_64\bin编译，实测报错&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Qt5编译(MSVC)</title>
        <link>https://www.ypr.cc/p/prog/cpp-qt5compile-msvc/</link>
        <pubDate>Fri, 24 Nov 2023 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-qt5compile-msvc/</guid>
        <description>&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc-snapshots.qt.io/qt5-5.15/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc-snapshots.qt.io/qt5-5.15/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/supported-platforms.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/supported-platforms.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/windows-requirements.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/windows-requirements.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-5/configure-options.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-5/configure-options.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.qt.io/Building_Qt_5_from_Git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.qt.io/Building_Qt_5_from_Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.qt.io/MinGW-64-bit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.qt.io/MinGW-64-bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zxjohnson/article/details/106621457&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/zxjohnson/article/details/106621457&lt;/a&gt; (Qt 5.15.0编译指南)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/MrTsai_cpp/article/details/115175669&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/MrTsai_cpp/article/details/115175669&lt;/a&gt; (Qt 5.15的源码编译(Windows))&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/arxive/p/14412614.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/arxive/p/14412614.html&lt;/a&gt; (QT 5.15 及以后QT版本源码编译（静态库、动态库）)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kucoding.com/article/149&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.kucoding.com/article/149&lt;/a&gt; (Qt6.5.3静态编译与使用-酷编程)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_50964512/article/details/124746458&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_50964512/article/details/124746458&lt;/a&gt; (Qt 静态编译与使用（6.2 详解版）)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载源码包&#34;&gt;下载源码包&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.qt.io/archive/qt/5.15/5.15.11/single/qt-everywhere-opensource-src-5.15.11.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.qt.io/archive/qt/5.15/5.15.11/single/qt-everywhere-opensource-src-5.15.11.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装build工具并配置相关环境变量&#34;&gt;安装build工具并配置相关环境变量&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2019或2022&lt;/li&gt;
&lt;li&gt;These tools are not needed to run Qt 5 applications, but they are required for building Qt 5 from source.
&lt;ul&gt;
&lt;li&gt;Perl - Install a recent version of perl (for instance (&lt;a class=&#34;link&#34; href=&#34;https://strawberryperl.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://strawberryperl.com/&lt;/a&gt;) and add the installation location to your PATH.&lt;/li&gt;
&lt;li&gt;Python - Install Python from the here and add the installation location to your PATH.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;验证build工具是否正确安装&#34;&gt;验证build工具是否正确安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;打开&amp;quot;x64 Native Tools Command Prompt for VS 2022&amp;quot;&lt;/li&gt;
&lt;li&gt;输入
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Perl -V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; python -V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;设定文件夹&#34;&gt;设定文件夹&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;F:\Qt\5.5.11\src                                 源码目录qt-everywhere-opensource-src-5.15.11.zip解压，并改名为src，放置于F:\Qt\5.5.11\src&lt;/li&gt;
&lt;li&gt;F:\Qt\5.5.11\build-msvc2019_64    build目录&lt;/li&gt;
&lt;li&gt;F:\Qt\5.5.11-static\msvc2019_64   最后安装目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译&#34;&gt;编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立F:\Qt\qt5vars.cmd文件，需设置好VS2022的bat路径(x64 Native Tools Command Prompt for VS 2022)、是否amd64、Qt源代码路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立cmd链接cmd-qt5vars，并运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;替代下文手动将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-msvc2019_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\5.15.11\build-msvc2019_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\5.15.11-static\msvc2019_64&amp;#34;&lt;/span&gt; -debug-and-release -nomake examples -nomake tests -skip qtwebengine -opensource
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jom          &lt;span class=&#34;c1&#34;&gt;#按官方文档安装jom(是nmake的克隆，支持并行执行多个独立命令类似于GNU make的-j命令)               &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jom install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译此段内容为历史记录作废&#34;&gt;&lt;del&gt;编译(此段内容为历史记录，作废)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;打开&amp;quot;x64 Native Tools Command Prompt for VS 2022&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本步骤在2023-11-23编译时未使用，查看官网文档可将上一步替换优化如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立F:\Qt\qt5vars.cmd文件，需设置好VS2022的bat路径、是否amd64、Qt源代码路径&lt;/li&gt;
&lt;li&gt;建立cmd链接cmd-qt5vars，并运行&lt;/li&gt;
&lt;li&gt;比较后，本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;替代下文手动将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-msvc2019_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\5.15.11\build-msvc2019_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#当使用上述qt5vars.cmd文件时，可省略此三行命令，因为已经在qt5vars.cmd文件中执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;F:&lt;span class=&#34;se&#34;&gt;\Q&lt;/span&gt;t&lt;span class=&#34;se&#34;&gt;\5&lt;/span&gt;.15.11&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc                                  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;%_ROOT%&lt;span class=&#34;se&#34;&gt;\q&lt;/span&gt;tbase&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%_ROOT%&lt;span class=&#34;se&#34;&gt;\g&lt;/span&gt;nuwin32&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%PATH%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SET &lt;span class=&#34;nv&#34;&gt;_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\5.15.11-static\msvc2019_64&amp;#34;&lt;/span&gt; -debug-and-release -nomake examples -nomake tests -skip qtwebengine -opensource
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmake          &lt;span class=&#34;c1&#34;&gt;#2023-11-23实测较慢，可按官方文档安装jom(是nmake的克隆，支持并行执行多个独立命令类似于GNU make的-j命令)，此步改为&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;c1&#34;&gt;#jom                 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmake install  &lt;span class=&#34;c1&#34;&gt;#如上一步执行jom，此步应对应执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;c1&#34;&gt;#jom install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明1&#34;&gt;说明1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;-static就是静态编译的意思，&lt;/li&gt;
&lt;li&gt;-debug-and-release，则表示将调试版、发行版都进行编译。&lt;/li&gt;
&lt;li&gt;-prefix 指定安装将会部署的位置，根据自己情况修改&lt;/li&gt;
&lt;li&gt;-nomake examples 不需要编译示例&lt;/li&gt;
&lt;li&gt;-nomake tests 不需要编译测试工程&lt;/li&gt;
&lt;li&gt;-skip qtwebengine 暂时先不编译webengine模块，因为太大了&lt;/li&gt;
&lt;li&gt;-opensource 开源版本&lt;/li&gt;
&lt;li&gt;-confirm-license 是为了自动确认开源证书，免得到时暂停手动确认&lt;/li&gt;
&lt;li&gt;-qt-zlib -ssl -icu 指示检测这些库，并在需要时使用&lt;/li&gt;
&lt;li&gt;-opengl desktop 明确指示使用你windows上安装的opengl驱动来编译程序，但这样编译出的程序在别的电脑上运行时需要目标电脑上安装的opengl驱动能兼容你的程序&lt;/li&gt;
&lt;li&gt;-platform win32-g++ 指明编译平台是windows，并使用mingw编译器
&lt;ul&gt;
&lt;li&gt;For Windows machines, either MinGW or Visual Studio toolchains can be used to compile Qt.
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;configure.bat -platform win32-g++
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;configure.bat -platform win32-msvc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明2&#34;&gt;说明2&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;等待配置完成后(其间要输入y同意协议)，再运行命令&lt;del&gt;nmake&lt;/del&gt; jom开始构建：&lt;/li&gt;
&lt;li&gt;然后就是慢慢等编译了，这个过程比较漫长，如果电脑配置较低，估计需要几个小时：&lt;/li&gt;
&lt;li&gt;编译完成后，继续运行命令&lt;del&gt;nmake install&lt;/del&gt; jom install即可将编译好的静态库安装到前面我们所指定的目录中去：&lt;/li&gt;
&lt;li&gt;此时你就可以删除前面的build文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-23编译&#34;&gt;&lt;del&gt;2023-11-23编译&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;环境：YPR-Desktop、Windows 11 pro 23H2、Visual Studio 2022、约1小时、1.58GB（有部分编译错误）&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;build文件约8.2GB，已删除&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;未编译doc&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-24编译&#34;&gt;2023-11-24编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Desktop、Windows 11 pro 23H2、Visual Studio 2022、约15分钟、4.14GB&lt;/li&gt;
&lt;li&gt;采用了qt5vars.cmd、采用了jom和jom install&lt;/li&gt;
&lt;li&gt;build文件约24GB，已删除&lt;/li&gt;
&lt;li&gt;未编译doc&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Qt6编译(MinGW-w64)</title>
        <link>https://www.ypr.cc/p/prog/cpp-qt6compile-mingw-w64/</link>
        <pubDate>Fri, 24 Nov 2023 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-qt6compile-mingw-w64/</guid>
        <description>&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-6.5/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-6.5/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kucoding.com/article/149&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.kucoding.com/article/149&lt;/a&gt; (Qt6.5.3静态编译与使用-酷编程)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_50964512/article/details/124746458&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_50964512/article/details/124746458&lt;/a&gt; (Qt 静态编译与使用（6.2 详解版）)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/630112083&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/630112083&lt;/a&gt; (QT6 opensource安装详解)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载源码包&#34;&gt;下载源码包&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.qt.io/archive/qt/6.5/6.5.3/single/qt-everywhere-src-6.5.3.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.qt.io/archive/qt/6.5/6.5.3/single/qt-everywhere-src-6.5.3.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装build工具并配置相关环境变量&#34;&gt;安装build工具并配置相关环境变量&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;D:\Qt\Tools\mingw1120_64\bin&lt;/li&gt;
&lt;li&gt;CMake	Version 3.16 and newer (3.17 and newer for builds 3.21 and newer for builds)&lt;/li&gt;
&lt;li&gt;Ninja&lt;/li&gt;
&lt;li&gt;Python	Version 3	Required build tool. Windows installers are available on python.org, or from the Microsoft Store.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;验证build工具是否正确安装&#34;&gt;验证build工具是否正确安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;打开cmd(不要关闭)&lt;/li&gt;
&lt;li&gt;输入
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;D:&lt;span class=&#34;se&#34;&gt;\Q&lt;/span&gt;t&lt;span class=&#34;se&#34;&gt;\T&lt;/span&gt;ools&lt;span class=&#34;se&#34;&gt;\m&lt;/span&gt;ingw1120_64&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;in&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;%PATH%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; gcc -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; g++ -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ninja --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; python -V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;设定文件夹&#34;&gt;设定文件夹&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;F:\Qt\6.5.3\src                             源码目录qt-everywhere-src-6.5.3.zip解压，并改名为src，放置于F:\Qt\6.5.3\src&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3\build-mingw_64      build目录(Release版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3\build-mingw_64      build目录(Debug版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3-static\mingw_64     最后安装目录(Release版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3-static\mingw_64d   最后安装目录(Debug版本)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译release版本&#34;&gt;编译Release版本&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立F:\Qt\qt6mingw_64.cmd文件，需设置好Qt源代码路径、mingw1120_64路径(D:\Qt\Tools\mingw1120_64\bin)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立cmd链接cmd-qt6mingw_64，并运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-mingw_64 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依上述定位到F:\Qt\6.5.3\build-mingw_64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\mingw_64&amp;#34;&lt;/span&gt; -release -DNDEBUG  &lt;span class=&#34;c1&#34;&gt;#-DNDEBUG见常见错误&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译debug版本&#34;&gt;编译Debug版本&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;关闭上述命令窗口，重新运行cmd链接cmd-qt6mingw_64&lt;/li&gt;
&lt;li&gt;输入
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-mingw_64d   &lt;span class=&#34;c1&#34;&gt;#注意路径有d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;依上述定位到F:\Qt\6.5.3\build-mingw_64d&lt;/li&gt;
&lt;li&gt;依次执行命令
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\mingw_64d&amp;#34;&lt;/span&gt; -debug -DNDEBUG  &lt;span class=&#34;c1&#34;&gt;#注意路径有d，编译选项为-debug，-DNDEBUG见常见错误&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译此段内容为历史记录作废&#34;&gt;&lt;del&gt;编译(此段内容为历史记录，作废)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在cmd中(上述不要关闭，否则要重新set PATH=D:\Qt\Tools\mingw1120_64\bin;%PATH%)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本步骤在2023-11-23编译时未使用，查看官网文档可将上一步替换优化如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立F:\Qt\qt6mingw_64.cmd文件，需设置好Qt源代码路径、mingw1120_64路径&lt;/li&gt;
&lt;li&gt;建立cmd链接cmd-qt6mingw_64，并运行&lt;/li&gt;
&lt;li&gt;比较后，本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-mingw_64 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依上述定位到F:\Qt\6.5.3\build-mingw_64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\mingw_64&amp;#34;&lt;/span&gt; -debug-and-release -DNDEBUG  &lt;span class=&#34;c1&#34;&gt;#见常见错误&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明&#34;&gt;说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;其中-static就是静态编译的意思，而后面的-debug-and-release，则表示将调试版、发行版都进行编译。&lt;/li&gt;
&lt;li&gt;等待配置完成后，再运行命令cmake &amp;ndash;build .开始构建：&lt;/li&gt;
&lt;li&gt;然后就是慢慢等编译了，这个过程比较漫长，如果电脑配置较低，估计需要几个小时：&lt;/li&gt;
&lt;li&gt;编译完成后，继续运行命令cmake &amp;ndash;install .即可将编译好的静态库安装到前面我们所指定的目录中去：&lt;/li&gt;
&lt;li&gt;此时你就可以删除前面的build文件夹，释放110多G的空间，它已经没用了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常见错误&#34;&gt;常见错误&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ERROR: Exactly one of NDEBUG and _DEBUG needs to be defined&lt;/li&gt;
&lt;li&gt;在configure.bat这个命令中，增加-DNDEBUG
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;E:&lt;span class=&#34;se&#34;&gt;\q&lt;/span&gt;t-everywhere-src-6.5.0&lt;span class=&#34;se&#34;&gt;\q&lt;/span&gt;tbase&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -top-level -release -no-pch -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;E:\Qt\Qt6.5.0&amp;#34;&lt;/span&gt; -skip qtwebengine -nomake tools -nomake tests -nomake examples -DNDEBUG
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-23编译已删除&#34;&gt;&lt;del&gt;2023-11-23编译(已删除)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;环境：YPR-Desktop、Windows 11 pro 23H2、D:\Qt\Tools\mingw1120_64\bin、约20分钟、2.0GB&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;build文件夹约100多GB，已删除&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;测试时程序无法Debug：带d版本在build文件夹中已编译，但在camke &amp;ndash;install .时没有被复制过来，参考&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/eslzzyl/p/17270948.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VS2022编译安装Qt6.4&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-25编译&#34;&gt;2023-11-25编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Desktop、Windows 11 pro 23H2、D:\Qt\Tools\mingw1120_64\bin、约15分钟(单独Release或Debug)、Release1.96GB+Debug37.9GB&lt;/li&gt;
&lt;li&gt;采用了cmd-qt6mingw_64，分别编译Release和Debug版本&lt;/li&gt;
&lt;li&gt;build文件夹：Release55.8GB+Debug120GB，已删除&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Qt6编译(MSVC)</title>
        <link>https://www.ypr.cc/p/prog/cpp-qt6compile-msvc/</link>
        <pubDate>Fri, 24 Nov 2023 13:00:21 +0800</pubDate>
        
        <guid>https://www.ypr.cc/p/prog/cpp-qt6compile-msvc/</guid>
        <description>&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://doc.qt.io/qt-6.5/windows-building.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://doc.qt.io/qt-6.5/windows-building.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kucoding.com/article/149&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.kucoding.com/article/149&lt;/a&gt; (Qt6.5.3静态编译与使用-酷编程)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_50964512/article/details/124746458&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_50964512/article/details/124746458&lt;/a&gt; (Qt 静态编译与使用（6.2 详解版）)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载源码包&#34;&gt;下载源码包&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.qt.io/archive/qt/6.5/6.5.3/single/qt-everywhere-src-6.5.3.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.qt.io/archive/qt/6.5/6.5.3/single/qt-everywhere-src-6.5.3.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装build工具并配置相关环境变量&#34;&gt;安装build工具并配置相关环境变量&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Visual Studio 2019或2022&lt;/li&gt;
&lt;li&gt;CMake	Version 3.16 and newer (3.17 and newer for builds 3.21 and newer for builds)&lt;/li&gt;
&lt;li&gt;Ninja&lt;/li&gt;
&lt;li&gt;Python	Version 3	Required build tool. Windows installers are available on python.org, or from the Microsoft Store.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;验证build工具是否正确安装&#34;&gt;验证build工具是否正确安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;打开&amp;quot;x64 Native Tools Command Prompt for VS 2022&amp;quot;&lt;/li&gt;
&lt;li&gt;输入
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ninja --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; python -V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;设定文件夹&#34;&gt;设定文件夹&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;F:\Qt\6.5.3\src                                  源码目录qt-everywhere-src-6.5.3.zip解压，并改名为src，放置于F:\Qt\6.5.3\src&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3\build-msvc2019_64     build目录(Release版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3\build-msvc2019_64d   build目录(Debug版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3-static\msvc2019_64     最后安装目录(Release版本)&lt;/li&gt;
&lt;li&gt;F:\Qt\6.5.3-static\msvc2019_64d   最后安装目录(Debug版本)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译release版本&#34;&gt;编译Release版本&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;建立F:\Qt\qt6vars.cmd文件，需设置好VS2022的bat路径(x64 Native Tools Command Prompt for VS 2022)、是否amd64、Qt源代码路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;建立cmd链接cmd-qt6vars，并运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-msvc2019_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\6.5.3\build-msvc2019_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\msvc2019_64&amp;#34;&lt;/span&gt; -release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译debug版本&#34;&gt;编译Debug版本&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关闭上述命令窗口，重新运行cmd链接cmd-qt6vars&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-msvc2019_64d   &lt;span class=&#34;c1&#34;&gt;#注意路径有d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\6.5.3\build-msvc2019_64d
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\msvc2019_64d&amp;#34;&lt;/span&gt; -debug  &lt;span class=&#34;c1&#34;&gt;#注意路径有d，编译选项为-debug&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;编译此段内容为历史记录作废&#34;&gt;&lt;del&gt;编译(此段内容为历史记录，作废)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;打开&amp;quot;x64 Native Tools Command Prompt for VS 2022&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本步骤在2023-11-23编译时未使用，查看官网文档可将上一步替换优化如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立F:\Qt\qt6vars.cmd文件，需设置好VS2022的bat路径、是否amd64、Qt源代码路径&lt;/li&gt;
&lt;li&gt;建立cmd链接cmd-qt6vars，并运行&lt;/li&gt;
&lt;li&gt;比较后，本步骤主要用途为
&lt;ol&gt;
&lt;li&gt;开启cmd.exe /E:ON /V:ON&lt;/li&gt;
&lt;li&gt;将Qt源码相关路径加入PATH&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;/E:ON  启用命令扩展 详见[&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/mq0036/p/5244892.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cmd.exe启动参数说明&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;/V:ON  启用延迟的环境变量扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; F:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Qt&lt;span class=&#34;se&#34;&gt;\6&lt;/span&gt;.5.3&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;uild-msvc2019_64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;依上述定位到F:\Qt\6.5.3\build-msvc2019_64
依次执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;#2023-11-23编译、2023-11-24编译&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\msvc2019_64&amp;#34;&lt;/span&gt; -debug-and-release
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2023-11-24编译解决带d版本在camke &amp;ndash;install .时没有被复制过来&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;清空build目录，最后安装目录不动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依次执行命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#重新用-debug编译一次&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;..&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;rc&lt;span class=&#34;se&#34;&gt;\c&lt;/span&gt;onfigure.bat -static -prefix &lt;span class=&#34;s2&#34;&gt;&amp;#34;F:\Qt\6.5.3-static\msvc2019_64&amp;#34;&lt;/span&gt; -debug
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --build .    &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cmake --install .  &lt;span class=&#34;c1&#34;&gt;#不要忘记点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;说明&#34;&gt;说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;其中-static就是静态编译的意思，而后面的-debug-and-release，则表示将调试版、发行版都进行编译。&lt;/li&gt;
&lt;li&gt;等待配置完成后，再运行命令cmake &amp;ndash;build .开始构建：&lt;/li&gt;
&lt;li&gt;然后就是慢慢等编译了，这个过程比较漫长，如果电脑配置较低，估计需要几个小时：&lt;/li&gt;
&lt;li&gt;编译完成后，继续运行命令cmake &amp;ndash;install .即可将编译好的静态库安装到前面我们所指定的目录中去：&lt;/li&gt;
&lt;li&gt;此时你就可以删除前面的build文件夹，释放110多G的空间，它已经没用了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-23编译已删除&#34;&gt;&lt;del&gt;2023-11-23编译(已删除)&lt;/del&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;环境：YPR-Desktop、Windows 11 pro 23H2、Visual Studio 2022、约20分钟、1.41GB&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;build文件夹约100多GB，已删除&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;测试时程序无法Debug：带d版本在build文件夹中已编译，但在camke &amp;ndash;install .时没有被复制过来，参考&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/eslzzyl/p/17270948.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VS2022编译安装Qt6.4&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2023-11-24编译&#34;&gt;2023-11-24编译&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;环境：YPR-Desktop、Windows 11 pro 23H2、Visual Studio 2022、约20分钟、Release1.41GB+Debug15.6GB&lt;/li&gt;
&lt;li&gt;采用了qt6vars.cmd&lt;/li&gt;
&lt;li&gt;build文件夹约111GB（单独Release为51.3GB，单独Debug为77.9GB），已删除&lt;/li&gt;
&lt;li&gt;测试时程序无法Debug：带d版本在build文件夹中已编译，但在camke &amp;ndash;install .时没有被复制过来，参考&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/eslzzyl/p/17270948.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VS2022编译安装Qt6.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解决方案：用-debug选项再编译一次（build文件夹需清空，install文件夹需备份Release版本）&lt;/li&gt;
&lt;li&gt;-debug和&amp;ndash;release选项有同名文件但大小不同，install文件夹不能合并&lt;/li&gt;
&lt;li&gt;Debug版本QTDIR路径不是F:\Qt\6.5.3\build-msvc2019_64d而是F:\Qt\6.5.3\build-msvc2019_64，应用qt.conf修正&lt;/li&gt;
&lt;li&gt;存档：7z(9-极限压缩）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
